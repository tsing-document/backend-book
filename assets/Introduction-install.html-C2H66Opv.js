import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as e,o as a}from"./app-DFdJ1gIm.js";const l={};function n(h,i){return a(),t("div",null,i[0]||(i[0]=[e(`<p>csdn发布日期：2024-09-17</p><p>NestJS 是一个基于 TypeScript 和 Node.js 的后端框架，专为构建高效、可维护和可扩展的服务器端应用程序而设计。</p><h2 id="一、背景与起源" tabindex="-1"><a class="header-anchor" href="#一、背景与起源"><span>一、背景与起源</span></a></h2><ul><li><strong>创立者</strong>：NestJS 由 Kamil Mysliwiec 在 2016 年创立，旨在提供一个结构化、模块化的开发环境，以弥补当时 Node.js 生态系统中缺乏的清晰架构模式。</li><li><strong>设计理念</strong>：NestJS 借鉴了 Angular 框架的设计原则，如依赖注入、模块化、组件化等，将其应用到后端开发中，使得开发者能够像构建前端应用那样构建后端服务。</li></ul><h2 id="二、核心特性" tabindex="-1"><a class="header-anchor" href="#二、核心特性"><span>二、核心特性</span></a></h2><p>1、TypeScript 支持：</p><ul><li>NestJS 采用 TypeScript 作为主要编程语言，利用静态类型检查、强大的代码智能感知和更好的代码质量控制，使得代码更易于维护和重构。</li><li>同时，NestJS 也兼容纯 JavaScript，允许开发者在必要时使用。</li></ul><p>2、模块化架构：</p><ul><li>NestJS 使用模块化的设计，将应用程序分割成多个可重用的模块，有助于保持代码的组织结构清晰，便于团队协作，并支持快速开发和测试。</li></ul><p>3、依赖注入：</p><ul><li>NestJS 使用依赖注入容器，使得管理依赖关系和组件变得更加容易。这有助于解耦组件，并使代码更容易测试和重用。</li></ul><p>4、内置支持：</p><ul><li>NestJS 提供了内置的模块和库，用于处理常见的任务，如 HTTP 请求处理、WebSockets、WebSocket Gateways、身份验证、授权等。</li></ul><p>5、可扩展性：</p><ul><li>NestJS 提供了丰富的生态系统，包括中间件、插件、拦截器和自定义装饰器，允许开发者根据需要扩展框架的功能。</li></ul><p>6、底层框架：</p><ul><li>NestJS 构建在强大的 HTTP 服务器框架上，如 Express（默认）和 Fastify，但向开发者直接暴露了底层框架的 API，使得开发者可以自由地使用适用于底层平台的第三方模块。</li></ul><h2 id="三、优势与应用场景" tabindex="-1"><a class="header-anchor" href="#三、优势与应用场景"><span>三、优势与应用场景</span></a></h2><ul><li><p><strong>优势</strong>：</p><ul><li><strong>高效开发</strong>：NestJS 提供了丰富的工具和抽象层，帮助开发人员快速构建可扩展的、可维护的应用程序。</li><li><strong>社区和文档</strong>：NestJS 拥有活跃的社区和详细的文档，为开发者提供了丰富的学习资源和支持。</li><li><strong>灵活性与可扩展性</strong>：通过模块化架构和依赖注入，NestJS 使得应用程序的组织和拓展变得非常容易。</li></ul></li><li><p><strong>应用场景</strong>：</p><ul><li><strong>微服务架构</strong>：NestJS 支持微服务架构，使得大型应用可以被拆分为多个小型、独立的服务，每个服务专注于单一功能，易于开发和维护。</li><li><strong>RESTful API 开发</strong>：NestJS 内置了对 RESTful API 的支持，使得构建 API 变得简单而高效。</li><li><strong>实时通信</strong>：借助 WebSocket 和其他实时通信技术，NestJS 可以构建响应式和交互式的应用程序。</li></ul></li></ul><h2 id="四、安装和访问" tabindex="-1"><a class="header-anchor" href="#四、安装和访问"><span>四、安装和访问</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @nestjs/cli</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ## 全局安装脚手架</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project-name</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ## 创建项目 project-name 换成你想要的英文名称</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project-name</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ## 切换到你创建好的项目文件夹中</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ## 启动项目</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 在浏览器中输入</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http://127.0.0.1:3000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 就能看到浏览器中输出的信息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、介绍目录" tabindex="-1"><a class="header-anchor" href="#五、介绍目录"><span>五、介绍目录</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">src</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.controller.spec.ts</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ## 控制器的单元测试</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.controller.ts</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ## 具有单一路由的基本控制器。和java中的 controller 类似</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.module.ts</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ## 应用的根模块</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.service.ts</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ## 具体业务实现的地方</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main.ts</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ## 使用核心函数 NestFactory 创建 Nest 应用实例的应用入口文件。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、自动生成代码的工具" tabindex="-1"><a class="header-anchor" href="#六、自动生成代码的工具"><span>六、自动生成代码的工具</span></a></h2><p>在项目的根路径下执行下面的命令，可以帮你生成出简单的 <code>增、删、改、查</code> 的代码。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [name]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,26)]))}const k=s(l,[["render",n],["__file","Introduction-install.html.vue"]]),d=JSON.parse('{"path":"/nestJs/base/Introduction-install.html","title":"【第二篇章】介绍和安装","lang":"zh-CN","frontmatter":{"title":"【第二篇章】介绍和安装","index":false,"isOriginal":true,"category":"nestJs","tag":"nestJs基础","date":"2024-09-16T00:00:00.000Z","description":"csdn发布日期：2024-09-17 NestJS 是一个基于 TypeScript 和 Node.js 的后端框架，专为构建高效、可维护和可扩展的服务器端应用程序而设计。 一、背景与起源 创立者：NestJS 由 Kamil Mysliwiec 在 2016 年创立，旨在提供一个结构化、模块化的开发环境，以弥补当时 Node.js 生态系统中缺乏的...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/backend-book/nestJs/base/Introduction-install.html"}],["meta",{"property":"og:site_name","content":"极速蜗牛"}],["meta",{"property":"og:title","content":"【第二篇章】介绍和安装"}],["meta",{"property":"og:description","content":"csdn发布日期：2024-09-17 NestJS 是一个基于 TypeScript 和 Node.js 的后端框架，专为构建高效、可维护和可扩展的服务器端应用程序而设计。 一、背景与起源 创立者：NestJS 由 Kamil Mysliwiec 在 2016 年创立，旨在提供一个结构化、模块化的开发环境，以弥补当时 Node.js 生态系统中缺乏的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-18T03:17:32.000Z"}],["meta",{"property":"article:author","content":"青衣"}],["meta",{"property":"article:tag","content":"nestJs基础"}],["meta",{"property":"article:published_time","content":"2024-09-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-18T03:17:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【第二篇章】介绍和安装\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-18T03:17:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"青衣\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、背景与起源","slug":"一、背景与起源","link":"#一、背景与起源","children":[]},{"level":2,"title":"二、核心特性","slug":"二、核心特性","link":"#二、核心特性","children":[]},{"level":2,"title":"三、优势与应用场景","slug":"三、优势与应用场景","link":"#三、优势与应用场景","children":[]},{"level":2,"title":"四、安装和访问","slug":"四、安装和访问","link":"#四、安装和访问","children":[]},{"level":2,"title":"五、介绍目录","slug":"五、介绍目录","link":"#五、介绍目录","children":[]},{"level":2,"title":"六、自动生成代码的工具","slug":"六、自动生成代码的工具","link":"#六、自动生成代码的工具","children":[]}],"git":{"createdTime":1731899852000,"updatedTime":1731899852000,"contributors":[{"name":"tsing-dong","email":"ld320321@163.com","commits":1}]},"readingTime":{"minutes":3.26,"words":979},"filePathRelative":"nestJs/base/Introduction-install.md","localizedDate":"2024年9月16日","excerpt":"<p>csdn发布日期：2024-09-17</p>\\n<p>NestJS 是一个基于 TypeScript 和 Node.js 的后端框架，专为构建高效、可维护和可扩展的服务器端应用程序而设计。</p>\\n<h2>一、背景与起源</h2>\\n<ul>\\n<li><strong>创立者</strong>：NestJS 由 Kamil Mysliwiec 在 2016 年创立，旨在提供一个结构化、模块化的开发环境，以弥补当时 Node.js 生态系统中缺乏的清晰架构模式。</li>\\n<li><strong>设计理念</strong>：NestJS 借鉴了 Angular 框架的设计原则，如依赖注入、模块化、组件化等，将其应用到后端开发中，使得开发者能够像构建前端应用那样构建后端服务。</li>\\n</ul>","autoDesc":true}');export{k as comp,d as data};
