import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as t,a as i}from"./app-khcMKkJW.js";const o="/backend-book/assets/%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86-D9_nrC_F.png",r="/backend-book/assets/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-75TFk1ga.png",a="/backend-book/assets/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1-F_vRb-YF.png",g="/backend-book/assets/%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB-Cn-KiO8r.png",s={},p=i('<h2 id="一、简介" tabindex="-1"><a class="header-anchor" href="#一、简介"><span>一、简介</span></a></h2><p>Nginx (engine x) 是一个高性能的 HTTP 和反向代理服务器，也是一个 IMAP/POP3/SMTP 代理服务器。由俄罗斯程序员 Igor Sysoev 开发，并在2004年首次公开发布。Nginx 以其高并发处理能力、低内存消耗、稳定性、丰富的功能集、简单的配置以及低学习曲线而广受欢迎。Nginx 通常被用作 Web 服务器来托管网站，但也可以有效地用作反向代理、负载均衡器和 HTTP 缓存。</p><h2 id="二、nginx-的主要特点" tabindex="-1"><a class="header-anchor" href="#二、nginx-的主要特点"><span>二、Nginx 的主要特点</span></a></h2><p>1、<strong>高性能</strong>：Nginx 采用了异步非阻塞的事件驱动模型，这使得它能够处理数以万计的并发连接，而无需为每个请求创建新的进程或线程。</p><p>2、<strong>稳定性</strong>：Nginx 的设计使其能够在高负载下保持稳定的性能，减少了崩溃和重启的需要。</p><p>3、<strong>丰富的功能集</strong>：除了基本的 HTTP 服务器功能外，Nginx 还支持 HTTPS、SSL/TLS、gzip 压缩、虚拟主机、URL 重写、负载均衡、缓存、HTTP/2 支持等。</p><p>4、<strong>配置简单</strong>：Nginx 的配置文件简洁明了，易于学习和使用。配置文件采用指令块的形式，支持丰富的变量和条件判断。</p><p>5、<strong>模块化设计</strong>：Nginx 的许多功能都是通过模块实现的，这些模块可以动态地加载和卸载，从而提供了高度的灵活性和可扩展性。</p><p>6、<strong>低内存消耗</strong>：Nginx 的内存占用非常低，这使得它能够在资源受限的环境中高效运行。</p><p>7、<strong>热部署</strong>：Nginx 支持在不中断服务的情况下升级和重新加载配置，这对于需要高可用性的生产环境尤为重要。</p><h2 id="三、nginx-的应用场景" tabindex="-1"><a class="header-anchor" href="#三、nginx-的应用场景"><span>三、Nginx 的应用场景</span></a></h2><ul><li><strong>静态文件服务器</strong>：用于托管静态文件（如 HTML、CSS、JavaScript、图片等）。</li><li><strong>反向代理</strong>：作为后端服务器（如 Apache、Tomcat）的前端，接收客户端请求并转发给后端服务器，同时提供负载均衡和缓存功能。</li><li><strong>负载均衡器</strong>：将客户端请求分发到多个后端服务器上，以平衡负载并提高系统的整体性能。</li><li><strong>HTTP 缓存</strong>：缓存静态内容以减少后端服务器的负载和响应时间。</li><li><strong>邮件代理服务器</strong>：作为 IMAP/POP3/SMTP 代理服务器，处理电子邮件的收发。</li></ul><h2 id="四、正向代理和反向代理" tabindex="-1"><a class="header-anchor" href="#四、正向代理和反向代理"><span>四、正向代理和反向代理</span></a></h2><p>1、正向代理 如果用户直接访问谷歌服务器是访问不通的，如果想要访问到谷歌服务器需要加一台正向代理服务器，然后在客户端（浏览器）中配置代理服务器就行了。</p><figure><img src="'+o+'" alt="正向代理" tabindex="0" loading="lazy"><figcaption>正向代理</figcaption></figure><p>2、反向代理 客户端对代理服务器是无感知的，因为客户端不用任何配置就可以访问，只用将请求发送到反向代理服务器上，由反向代理服务器去选择目标服务器，获取数据后，再返回给客户端用，此时，反向代理服务器和目标服务器对外就是一台服务器，暴露的是代理服务器的地址，隐藏了真实服务器的地址。</p><figure><img src="'+r+'" alt="反向代理" tabindex="0" loading="lazy"><figcaption>反向代理</figcaption></figure><h2 id="五、负载均衡" tabindex="-1"><a class="header-anchor" href="#五、负载均衡"><span>五、负载均衡</span></a></h2><p>客户端将多个请求发送到服务器，服务器处理请求，有一些可能要与数据库交互服务器处理完成后，再将结果返回给客户端。如果所有的请求都在一台服务器上访问，效率会大大的降低，这个时候就用 <code>负载均衡</code> 将多个请求通过代理服务器转发给不同的服务器上。效率会提升。</p><figure><img src="'+a+'" alt="负载均衡" tabindex="0" loading="lazy"><figcaption>负载均衡</figcaption></figure><h2 id="六、动静分离" tabindex="-1"><a class="header-anchor" href="#六、动静分离"><span>六、动静分离</span></a></h2><p>为了加快网站的解析速度，可以把动态的页面和静态的页面由不同的服务器解析，加快速度，降低原来单个服务器的压力。</p><figure><img src="'+g+'" alt="动静分离" tabindex="0" loading="lazy"><figcaption>动静分离</figcaption></figure>',23),l=[p];function c(d,h){return t(),n("div",null,l)}const u=e(s,[["render",c],["__file","introduce.html.vue"]]),T=JSON.parse('{"path":"/other/server/nginx/introduce.html","title":"【第一篇章】NGINX服务器","lang":"zh-CN","frontmatter":{"title":"【第一篇章】NGINX服务器","index":false,"isOriginal":true,"category":"奇谈杂论","tag":"nginx","date":"2024-08-10T00:00:00.000Z","description":"一、简介 Nginx (engine x) 是一个高性能的 HTTP 和反向代理服务器，也是一个 IMAP/POP3/SMTP 代理服务器。由俄罗斯程序员 Igor Sysoev 开发，并在2004年首次公开发布。Nginx 以其高并发处理能力、低内存消耗、稳定性、丰富的功能集、简单的配置以及低学习曲线而广受欢迎。Nginx 通常被用作 Web 服务器...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/backend-book/other/server/nginx/introduce.html"}],["meta",{"property":"og:site_name","content":"极速蜗牛"}],["meta",{"property":"og:title","content":"【第一篇章】NGINX服务器"}],["meta",{"property":"og:description","content":"一、简介 Nginx (engine x) 是一个高性能的 HTTP 和反向代理服务器，也是一个 IMAP/POP3/SMTP 代理服务器。由俄罗斯程序员 Igor Sysoev 开发，并在2004年首次公开发布。Nginx 以其高并发处理能力、低内存消耗、稳定性、丰富的功能集、简单的配置以及低学习曲线而广受欢迎。Nginx 通常被用作 Web 服务器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-10T07:55:09.000Z"}],["meta",{"property":"article:author","content":"青衣"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:published_time","content":"2024-08-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-10T07:55:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【第一篇章】NGINX服务器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-10T07:55:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"青衣\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、简介","slug":"一、简介","link":"#一、简介","children":[]},{"level":2,"title":"二、Nginx 的主要特点","slug":"二、nginx-的主要特点","link":"#二、nginx-的主要特点","children":[]},{"level":2,"title":"三、Nginx 的应用场景","slug":"三、nginx-的应用场景","link":"#三、nginx-的应用场景","children":[]},{"level":2,"title":"四、正向代理和反向代理","slug":"四、正向代理和反向代理","link":"#四、正向代理和反向代理","children":[]},{"level":2,"title":"五、负载均衡","slug":"五、负载均衡","link":"#五、负载均衡","children":[]},{"level":2,"title":"六、动静分离","slug":"六、动静分离","link":"#六、动静分离","children":[]}],"git":{"createdTime":1723276509000,"updatedTime":1723276509000,"contributors":[{"name":"Tsing","email":"ld320321@163.com","commits":1}]},"readingTime":{"minutes":3.5,"words":1050},"filePathRelative":"other/server/nginx/introduce.md","localizedDate":"2024年8月10日","excerpt":"<h2>一、简介</h2>\\n<p>Nginx (engine x) 是一个高性能的 HTTP 和反向代理服务器，也是一个 IMAP/POP3/SMTP 代理服务器。由俄罗斯程序员 Igor Sysoev 开发，并在2004年首次公开发布。Nginx 以其高并发处理能力、低内存消耗、稳定性、丰富的功能集、简单的配置以及低学习曲线而广受欢迎。Nginx 通常被用作 Web 服务器来托管网站，但也可以有效地用作反向代理、负载均衡器和 HTTP 缓存。</p>\\n<h2>二、Nginx 的主要特点</h2>\\n<p>1、<strong>高性能</strong>：Nginx 采用了异步非阻塞的事件驱动模型，这使得它能够处理数以万计的并发连接，而无需为每个请求创建新的进程或线程。</p>","autoDesc":true}');export{u as comp,T as data};
