import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as e,o as n}from"./app-BztGQQgh.js";const i={};function o(a,t){return n(),l("div",null,t[0]||(t[0]=[e("h2",{id:"一、sql-优化有哪些",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一、sql-优化有哪些"},[e("span",null,"一、SQL 优化有哪些？")])],-1),e("ul",null,[e("li",null,"1、Where 子句中：where 表之间的连接必须写在其他 Where条件之前，那些可 以过滤掉最大数量记录的条件必须写在Where子句的末尾.HAVING最后。"),e("li",null,"2、用 EXISTS 替代 IN、用 NOT EXISTS 替代 NOT IN。"),e("li",null,"3、避免在索引列上使用计算。"),e("li",null,"4、避免在索引列上使用IS NULL和 IS NOT NULL。"),e("li",null,"5、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 orderby 涉 及的列上建立索引。"),e("li",null,"6、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃 使用索引而进行全表扫描。"),e("li",null,"7、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用 索引而进行全表扫描。")],-1)]))}const c=r(i,[["render",o],["__file","mysql_center.html.vue"]]),h=JSON.parse('{"path":"/interview/storage/mysql_center.html","title":"🍾mysql常见面试题总结(中)","lang":"zh-CN","frontmatter":{"title":"🍾mysql常见面试题总结(中)","index":false,"isOriginal":true,"category":"面试宝典","tag":"mysql","date":"2024-08-15T00:00:00.000Z","description":"一、SQL 优化有哪些？ 1、Where 子句中：where 表之间的连接必须写在其他 Where条件之前，那些可 以过滤掉最大数量记录的条件必须写在Where子句的末尾.HAVING最后。 2、用 EXISTS 替代 IN、用 NOT EXISTS 替代 NOT IN。 3、避免在索引列上使用计算。 4、避免在索引列上使用IS NULL和 IS NO...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/backend-book/interview/storage/mysql_center.html"}],["meta",{"property":"og:site_name","content":"极速蜗牛"}],["meta",{"property":"og:title","content":"🍾mysql常见面试题总结(中)"}],["meta",{"property":"og:description","content":"一、SQL 优化有哪些？ 1、Where 子句中：where 表之间的连接必须写在其他 Where条件之前，那些可 以过滤掉最大数量记录的条件必须写在Where子句的末尾.HAVING最后。 2、用 EXISTS 替代 IN、用 NOT EXISTS 替代 NOT IN。 3、避免在索引列上使用计算。 4、避免在索引列上使用IS NULL和 IS NO..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-20T04:48:04.000Z"}],["meta",{"property":"article:author","content":"青衣"}],["meta",{"property":"article:tag","content":"mysql"}],["meta",{"property":"article:published_time","content":"2024-08-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-20T04:48:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🍾mysql常见面试题总结(中)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-20T04:48:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"青衣\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、SQL 优化有哪些？","slug":"一、sql-优化有哪些","link":"#一、sql-优化有哪些","children":[]}],"git":{"createdTime":1723740021000,"updatedTime":1724129284000,"contributors":[{"name":"Tsing","email":"ld320321@163.com","commits":1}]},"readingTime":{"minutes":0.8,"words":240},"filePathRelative":"interview/storage/mysql_center.md","localizedDate":"2024年8月15日","excerpt":"<h2>一、SQL 优化有哪些？</h2>\\n<ul>\\n<li>1、Where 子句中：where 表之间的连接必须写在其他 Where条件之前，那些可\\n以过滤掉最大数量记录的条件必须写在Where子句的末尾.HAVING最后。</li>\\n<li>2、用 EXISTS 替代 IN、用 NOT EXISTS 替代 NOT IN。</li>\\n<li>3、避免在索引列上使用计算。</li>\\n<li>4、避免在索引列上使用IS NULL和 IS NOT NULL。</li>\\n<li>5、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 orderby 涉\\n及的列上建立索引。</li>\\n<li>6、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃\\n使用索引而进行全表扫描。</li>\\n<li>7、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用\\n索引而进行全表扫描。</li>\\n</ul>","autoDesc":true}');export{c as comp,h as data};
