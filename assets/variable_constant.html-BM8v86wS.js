import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a,o as t}from"./app-B0bPUF07.js";const n={};function s(r,e){return t(),i("div",null,e[0]||(e[0]=[a(`<h2 id="一、变量类型" tabindex="-1"><a class="header-anchor" href="#一、变量类型"><span>一、变量类型</span></a></h2><h3 id="_1、整数类型" tabindex="-1"><a class="header-anchor" href="#_1、整数类型"><span>1、整数类型</span></a></h3><ul><li>int: 表示整数，通常占用4个字节。</li><li>short: 表示短整数，通常占用2个字节。</li><li>long: 表示长整数，通常占用4个字节。</li><li>long long: 表示更长的整数，通常占用8个字节。</li></ul><h3 id="_2、浮点类型" tabindex="-1"><a class="header-anchor" href="#_2、浮点类型"><span>2、浮点类型</span></a></h3><ul><li>float: 表示单精度浮点数，通常占用4个字节。</li><li>double: 表示双精度浮点数，通常占用8个字节。</li><li>long double: 表示更高精度的浮点数，占用的字节可以根据实现而变化。</li></ul><h3 id="_3、字符类型" tabindex="-1"><a class="header-anchor" href="#_3、字符类型"><span>3、字符类型</span></a></h3><ul><li>char: 用于表示字符，占用1个字节。</li><li>wchar_t: 用于宽字符，占用2个或者4个字节。</li><li>char16_t: 用于表示16位unicode字符，占用2个字节。</li><li>char32_t: 用于表示32位unicode字符，占用4个字节。</li></ul><h3 id="_4、布尔类型" tabindex="-1"><a class="header-anchor" href="#_4、布尔类型"><span>4、布尔类型</span></a></h3><ul><li>bool: 表示布尔值，只能取 true 或者 false。</li></ul><h3 id="_5、枚举类型" tabindex="-1"><a class="header-anchor" href="#_5、枚举类型"><span>5、枚举类型</span></a></h3><ul><li>enum: 用于定于一组命名的整数常量。</li></ul><h3 id="_6、指针类型" tabindex="-1"><a class="header-anchor" href="#_6、指针类型"><span>6、指针类型</span></a></h3><ul><li>type*: 用于表示类型为 type 的对象的指针。</li></ul><h3 id="_7、数组类型" tabindex="-1"><a class="header-anchor" href="#_7、数组类型"><span>7、数组类型</span></a></h3><ul><li>type[]或type[size]: 用于表示具有相同类型的元素组成的数组。</li></ul><h3 id="_8、结构体类型" tabindex="-1"><a class="header-anchor" href="#_8、结构体类型"><span>8、结构体类型</span></a></h3><ul><li>struct: 用于定义具有属性和方法的自定义类型。</li></ul><h3 id="_9、类类型" tabindex="-1"><a class="header-anchor" href="#_9、类类型"><span>9、类类型</span></a></h3><ul><li>class: 用于定义包含多个不同类型成员的结构。</li></ul><h3 id="_10、共用体类型" tabindex="-1"><a class="header-anchor" href="#_10、共用体类型"><span>10、共用体类型</span></a></h3><ul><li>union: 用于定义一种特殊的数据类型，它可以在相同的内存位置存储不同的数据类型。</li></ul><h2 id="二、变量的作用域" tabindex="-1"><a class="header-anchor" href="#二、变量的作用域"><span>二、变量的作用域</span></a></h2><p>在函数或者一个代码块内部声明的变量，称为 <code>局部变量</code>；在函数参数的定义中声明的变量，称为 <code>形式变量</code>；在所有函数外部声明的变量，称为 <code>全局变量</code>。</p><p>作用域是程序的一个区域，变量的作用域分为：<code>局部作用域</code> 在函数内部声明的变量具有局部作用域，它们只能在函数每次调用时被创建，在函数执行完后被销毁。 <code>全局作用域</code> 在所有函数和代码块之外声明的变量具有全局作用域，它们可以被程序中的任何函数访问，全局变量在程序开始时被创建，在程序结束时销毁。<code>块作用域</code> 在代码块内部声明的变量具有块作用域，它们只能在代码块内部访问，块作用域变量在代码块每次执行时被创建，在代码块执行完成后被销毁。<code>类作用域</code> 在类内部声明的变量 具有类作用域，它们能被类的所有成员变量访问，类作用域变量的生命周期相同。</p><h2 id="三、常量" tabindex="-1"><a class="header-anchor" href="#三、常量"><span>三、常量</span></a></h2><p>常量是固定值，在程序执行期间不会改变的，这些固定值，又叫 <code>字面量</code>。常量可以是任何的基本数据类型，可分为 <code>整型数字、浮点数字、字符、字符串、布尔值</code>。常量就像常规的变量，只不过常量的值在定义后不能修改。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 常量语法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">const</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> variable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、修饰符类型" tabindex="-1"><a class="header-anchor" href="#四、修饰符类型"><span>四、修饰符类型</span></a></h2><p>TODO: 待补充</p>`,29)]))}const d=l(n,[["render",s],["__file","variable_constant.html.vue"]]),c=JSON.parse('{"path":"/c/base/variable_constant.html","title":"【第二篇章】 变量和常量","lang":"zh-CN","frontmatter":{"title":"【第二篇章】 变量和常量","index":false,"isOriginal":true,"category":"c++","tag":"c++","date":"2025-02-08T00:00:00.000Z","description":"一、变量类型 1、整数类型 int: 表示整数，通常占用4个字节。 short: 表示短整数，通常占用2个字节。 long: 表示长整数，通常占用4个字节。 long long: 表示更长的整数，通常占用8个字节。 2、浮点类型 float: 表示单精度浮点数，通常占用4个字节。 double: 表示双精度浮点数，通常占用8个字节。 long doub...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/backend-book/c/base/variable_constant.html"}],["meta",{"property":"og:site_name","content":"极速蜗牛"}],["meta",{"property":"og:title","content":"【第二篇章】 变量和常量"}],["meta",{"property":"og:description","content":"一、变量类型 1、整数类型 int: 表示整数，通常占用4个字节。 short: 表示短整数，通常占用2个字节。 long: 表示长整数，通常占用4个字节。 long long: 表示更长的整数，通常占用8个字节。 2、浮点类型 float: 表示单精度浮点数，通常占用4个字节。 double: 表示双精度浮点数，通常占用8个字节。 long doub..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-10T03:34:15.000Z"}],["meta",{"property":"article:author","content":"青衣"}],["meta",{"property":"article:tag","content":"c++"}],["meta",{"property":"article:published_time","content":"2025-02-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-10T03:34:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【第二篇章】 变量和常量\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-08T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-10T03:34:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"青衣\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、变量类型","slug":"一、变量类型","link":"#一、变量类型","children":[{"level":3,"title":"1、整数类型","slug":"_1、整数类型","link":"#_1、整数类型","children":[]},{"level":3,"title":"2、浮点类型","slug":"_2、浮点类型","link":"#_2、浮点类型","children":[]},{"level":3,"title":"3、字符类型","slug":"_3、字符类型","link":"#_3、字符类型","children":[]},{"level":3,"title":"4、布尔类型","slug":"_4、布尔类型","link":"#_4、布尔类型","children":[]},{"level":3,"title":"5、枚举类型","slug":"_5、枚举类型","link":"#_5、枚举类型","children":[]},{"level":3,"title":"6、指针类型","slug":"_6、指针类型","link":"#_6、指针类型","children":[]},{"level":3,"title":"7、数组类型","slug":"_7、数组类型","link":"#_7、数组类型","children":[]},{"level":3,"title":"8、结构体类型","slug":"_8、结构体类型","link":"#_8、结构体类型","children":[]},{"level":3,"title":"9、类类型","slug":"_9、类类型","link":"#_9、类类型","children":[]},{"level":3,"title":"10、共用体类型","slug":"_10、共用体类型","link":"#_10、共用体类型","children":[]}]},{"level":2,"title":"二、变量的作用域","slug":"二、变量的作用域","link":"#二、变量的作用域","children":[]},{"level":2,"title":"三、常量","slug":"三、常量","link":"#三、常量","children":[]},{"level":2,"title":"四、修饰符类型","slug":"四、修饰符类型","link":"#四、修饰符类型","children":[]}],"git":{"createdTime":1739156167000,"updatedTime":1739158455000,"contributors":[{"name":"Tsing","email":"ld320321@163.com","commits":2}]},"readingTime":{"minutes":2.68,"words":805},"filePathRelative":"c/base/variable_constant.md","localizedDate":"2025年2月8日","excerpt":"<h2>一、变量类型</h2>\\n<h3>1、整数类型</h3>\\n<ul>\\n<li>int: 表示整数，通常占用4个字节。</li>\\n<li>short: 表示短整数，通常占用2个字节。</li>\\n<li>long: 表示长整数，通常占用4个字节。</li>\\n<li>long long: 表示更长的整数，通常占用8个字节。</li>\\n</ul>\\n<h3>2、浮点类型</h3>\\n<ul>\\n<li>float: 表示单精度浮点数，通常占用4个字节。</li>\\n<li>double: 表示双精度浮点数，通常占用8个字节。</li>\\n<li>long double: 表示更高精度的浮点数，占用的字节可以根据实现而变化。</li>\\n</ul>","autoDesc":true}');export{d as comp,c as data};
