import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,a as i}from"./app-CmTXfwIe.js";const a="/backend-book/assets/dubbo%E6%9E%B6%E6%9E%84-Dpk8YBKT.png",b="/backend-book/assets/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0-CuFCGQmY.png",l={},n=i('<h2 id="一、介绍" tabindex="-1"><a class="header-anchor" href="#一、介绍"><span>一、介绍</span></a></h2><p>Apache Dubbo 是一款 RPC 服务开发框架，用于解决微服务框架下的服务治理和通信问题。官方提供了多种 SDK 语言实现。使用 Dubbo 开发的微服务具备相互之间的远程地址发现和通信能力。利用 Dubbo 提供的丰富服务治理特性，可以实现诸如服务发现、负载均衡、流量调度等服务智力诉求。Dubbo 被设计为高度可扩展，用户可以方便的实现流量拦截、选址的各种定制逻辑。</p><h2 id="二、dubbo-能做什么" tabindex="-1"><a class="header-anchor" href="#二、dubbo-能做什么"><span>二、Dubbo 能做什么？</span></a></h2><p>1、微服务编程范式和工具</p><p>Dubbo 支持基于 IDL 或者语言特定方式的服务定义，提供多种形式的服务调用形式（同步、异步、流式等）。</p><p>2、高性能 RPC 通信</p><p>Dubbo 帮助解决微服务组件之间的通信问题，提供了基于 HTTP、HTTP/2、TCP 等多种高性能通信协议实现，并支持序列化协议扩展，在实现上解决了网络连接管理、数据传输等基础问题。</p><p>3、微服务监控和治理</p><p>Dubbo 官方提供的服务发现、动态配置、负载均衡、流量路由等基础组件可以很好的帮助解决微服务基础实践的问题。除此之外，还可以用 Admin 控制台监控微服务状态，通过周边生态完成限流降级、数据一致性、链路追踪。</p><h2 id="三、dubbo-架构" tabindex="-1"><a class="header-anchor" href="#三、dubbo-架构"><span>三、Dubbo 架构</span></a></h2><figure><img src="'+a+'" alt="dubbo架构" tabindex="0" loading="lazy"><figcaption>dubbo架构</figcaption></figure><p>上面的图是 Dubbo 的工作原理图，从抽象架构上分为两层：<strong>服务治理抽象控制面</strong> 和 <strong>Dubbo数据面</strong>。</p><ul><li>服务治理控制面：服务治理控制面不是特指注册中心类的单个具体组件，而是对 Dubbo 治理体系的抽象表达。控制面包含协调服务发现的注册中心、流量管控策略、Dubbo Admin 控制台等。</li><li>Dubbo 数据面：数据面代表集群部署的所有的 Dubbo 进程，进程之间通过 RPC 协议实现数据交换，Dubbo 定义了微服务应用开发和调用规范以及实现数据传输编码工作。 <ul><li>服务消费者：发起业务调用的进程。</li><li>服务提供者：接收业务调用的进程。</li></ul></li></ul><h2 id="四、dubbo-数据面" tabindex="-1"><a class="header-anchor" href="#四、dubbo-数据面"><span>四、Dubbo 数据面</span></a></h2><p>从数据层面看，Dubbo 解决了微服务实践中的以下问题：</p><ul><li>作为 服务开发框架 约束了微服务定义、开发和调用的规范，定义了服务治理流程及适配模式。</li><li>作为 RPC通信协议实现 解决服务间数据传输的编解码问题。</li></ul><h2 id="五、服务开发框架" tabindex="-1"><a class="header-anchor" href="#五、服务开发框架"><span>五、服务开发框架</span></a></h2><p>Dubbo 在微服务应用开发框架之上抽象了一套 RPC 服务定义、暴露、调用和治理的编程范式。</p><figure><img src="'+b+'" alt="服务发现" tabindex="0" loading="lazy"><figcaption>服务发现</figcaption></figure><p>Dubbo 作为服务开发框架包含的具体内容如下：</p><ul><li>RPC 服务定义、开发范式：支持 IDL 定义服务。比如 Java Interface 定义服务。</li><li>RPC 服务发布和调用API: 支持同步、异步、流式调用服务调用编程模式，还支持请求上线文 API、设置超时时间等。</li><li>服务治理策略、流程和适配方式：作为服务框架数据面，Dubbo 定义了服务地址发现、负载均衡策略、基于规则的流量路由、监控指标采集等服务治理抽象，并适配到特定的产品实现。</li></ul><h2 id="六、通信协议" tabindex="-1"><a class="header-anchor" href="#六、通信协议"><span>六、通信协议</span></a></h2><p>Dubbo 从设计上不限于任何一款特定的通信协议，HTTP/2、REST、GRPC、Hessian2 等几乎所有的主流通信协议。</p><h2 id="七、服务治理抽象" tabindex="-1"><a class="header-anchor" href="#七、服务治理抽象"><span>七、服务治理抽象</span></a></h2><p>Dubbo 核心的功能有以下几点：</p><ul><li>地址发现：具备高性能、支持大规模集群、服务级元数据配置等优势。</li><li>负载均衡：默认提供加权随机、加权轮询、最少活跃请求数优先、最短响应时间优先、一致哈希和自适应负载策略等。</li><li>流量路由：支持流量控制服务调用的流量分布和行为，基于这些规则可以实现基于权重的比例流量分发、灰度验证、金丝雀发布、按请求参数的路由、同区域优先、超时配置、重试、限流降级等能力。</li><li>链路追踪：支持请求的链路追踪。</li><li>可观测性：实现所有请求的状态。</li></ul>',26),r=[n];function u(p,d){return o(),t("div",null,r)}const h=e(l,[["render",u],["__file","introduce.html.vue"]]),m=JSON.parse('{"path":"/distributed/dubbo/introduce.html","title":"【第一篇章】介绍","lang":"zh-CN","frontmatter":{"title":"【第一篇章】介绍","index":false,"isOriginal":true,"category":"分布式技术","tag":"dubbo","date":"2024-08-01T00:00:00.000Z","description":"一、介绍 Apache Dubbo 是一款 RPC 服务开发框架，用于解决微服务框架下的服务治理和通信问题。官方提供了多种 SDK 语言实现。使用 Dubbo 开发的微服务具备相互之间的远程地址发现和通信能力。利用 Dubbo 提供的丰富服务治理特性，可以实现诸如服务发现、负载均衡、流量调度等服务智力诉求。Dubbo 被设计为高度可扩展，用户可以方便的...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/backend-book/distributed/dubbo/introduce.html"}],["meta",{"property":"og:site_name","content":"极速蜗牛"}],["meta",{"property":"og:title","content":"【第一篇章】介绍"}],["meta",{"property":"og:description","content":"一、介绍 Apache Dubbo 是一款 RPC 服务开发框架，用于解决微服务框架下的服务治理和通信问题。官方提供了多种 SDK 语言实现。使用 Dubbo 开发的微服务具备相互之间的远程地址发现和通信能力。利用 Dubbo 提供的丰富服务治理特性，可以实现诸如服务发现、负载均衡、流量调度等服务智力诉求。Dubbo 被设计为高度可扩展，用户可以方便的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-16T16:00:06.000Z"}],["meta",{"property":"article:author","content":"青衣"}],["meta",{"property":"article:tag","content":"dubbo"}],["meta",{"property":"article:published_time","content":"2024-08-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-16T16:00:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【第一篇章】介绍\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-16T16:00:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"青衣\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、介绍","slug":"一、介绍","link":"#一、介绍","children":[]},{"level":2,"title":"二、Dubbo 能做什么？","slug":"二、dubbo-能做什么","link":"#二、dubbo-能做什么","children":[]},{"level":2,"title":"三、Dubbo 架构","slug":"三、dubbo-架构","link":"#三、dubbo-架构","children":[]},{"level":2,"title":"四、Dubbo 数据面","slug":"四、dubbo-数据面","link":"#四、dubbo-数据面","children":[]},{"level":2,"title":"五、服务开发框架","slug":"五、服务开发框架","link":"#五、服务开发框架","children":[]},{"level":2,"title":"六、通信协议","slug":"六、通信协议","link":"#六、通信协议","children":[]},{"level":2,"title":"七、服务治理抽象","slug":"七、服务治理抽象","link":"#七、服务治理抽象","children":[]}],"git":{"createdTime":1722237269000,"updatedTime":1723824006000,"contributors":[{"name":"Tsing","email":"ld320321@163.com","commits":2}]},"readingTime":{"minutes":3.78,"words":1135},"filePathRelative":"distributed/dubbo/introduce.md","localizedDate":"2024年8月1日","excerpt":"<h2>一、介绍</h2>\\n<p>Apache Dubbo 是一款 RPC 服务开发框架，用于解决微服务框架下的服务治理和通信问题。官方提供了多种 SDK 语言实现。使用 Dubbo 开发的微服务具备相互之间的远程地址发现和通信能力。利用 Dubbo 提供的丰富服务治理特性，可以实现诸如服务发现、负载均衡、流量调度等服务智力诉求。Dubbo 被设计为高度可扩展，用户可以方便的实现流量拦截、选址的各种定制逻辑。</p>\\n<h2>二、Dubbo 能做什么？</h2>\\n<p>1、微服务编程范式和工具</p>\\n<p>Dubbo 支持基于 IDL 或者语言特定方式的服务定义，提供多种形式的服务调用形式（同步、异步、流式等）。</p>","autoDesc":true}');export{h as comp,m as data};
