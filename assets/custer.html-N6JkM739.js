import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as t,d as n,a as p,w as o,r as s,o as m,e as r}from"./app-Ckg3n4h6.js";const u={};function g(b,e){const l=s("Tabs");return m(),c("div",null,[e[6]||(e[6]=t("h2",{id:"一、概述",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#一、概述"},[t("span",null,"一、概述")])],-1)),e[7]||(e[7]=t("p",null,"1、集群中的角色",-1)),n(l,{id:"6",data:[{id:"Leader"},{id:"Follower"},{id:"Observer"}],active:0},{title0:o(({value:d,isActive:i})=>e[0]||(e[0]=[r("Leader")])),title1:o(({value:d,isActive:i})=>e[1]||(e[1]=[r("Follower")])),title2:o(({value:d,isActive:i})=>e[2]||(e[2]=[r("Observer")])),tab0:o(({value:d,isActive:i})=>e[3]||(e[3]=[t("p",null,[r("Zookeeper集群工作的核心，事务请求（写操作）唯一调度和处理者，保证集群事务处理的顺序性；集群内部各个服务的调度者。对于 "),t("strong",null,"create、setData、delete"),r("等有些操作的请求，则需要统一转发给Leader处理，Leader需要决定编号、执行操作，这个过程称为一个事务。")],-1)])),tab1:o(({value:d,isActive:i})=>e[4]||(e[4]=[t("p",null,"处理客户端非事务（读操作）请求，转发事务请求给Leader, 参与Leader选取投票。",-1)])),tab2:o(({value:d,isActive:i})=>e[5]||(e[5]=[t("p",null,"观察者角色，观察zookeeper集群的最新状态变化并将状态同步过来，其对于非事务的请求可以进行独立处理，对于事务请求，则会转发给Leader服务器处理，不会参数任何形式的投票只提供服务，其实就是增加非事务的并发量。",-1)])),_:1}),e[8]||(e[8]=p('<p>2、集群为什么要搭建奇数个节点</p><ul><li>如果部署单个节点，当节点宕机时，集群就会失效，就会出现单点故障。</li><li>如果部署两个节点，2的半数为1，半数以上最少为2，不允许有一台机器故障，不然投票机制不成立。</li><li>如果部署三个节点，3的半数为1.5，半数以上最少为2，允许有一台机器故障，投票机制可以成立。</li><li>如果部署四个节点，4的半数为2，半数以上最少为3，允许有一台机器机器故障，投票机制可以成立。</li><li>如果部署五个节点，5的半数为2.5，半数以上最少为3，允许有两台机器故障，投票机制可以成立。</li><li>所以部署zookeeper集群的时候一般部署的节点数量为<code>2n+1</code>台节点。</li></ul><h2 id="二、集群选取机制" tabindex="-1"><a class="header-anchor" href="#二、集群选取机制"><span>二、集群选取机制</span></a></h2><p>1、节点状态</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>Looking</td><td>这个是在选举的过程中的状态，正在选举。</td></tr><tr><td>Leading</td><td>领导者状态，说明当前节点角色已经是Leader。</td></tr><tr><td>Following</td><td>跟随者状态，表示选举已经完成，当前角色已经是Following。</td></tr><tr><td>Oberver</td><td>观察者状态，表示当前节点角色是observer。</td></tr></tbody></table><p>2、事务ID</p><p>Zookeeper状态每次变化都接收一个<code>ZXID</code>（zookeeper事务id）形式的标记，由Leader统一分配，全局唯一，不断递增。</p><p>3、初始化选取过程</p><p>由三个节点举例：当<code>第一个节点</code>启动的时候，因为单节点无法进行选举，所以当<code>第二个节点</code>启动之后，两台机器之间可以互相通信了，开始选举过程：</p><ul><li>1、两个节点都当自己是 Leader 角色来投票，每次投票都包含服务器配置的 <code>myid</code>（下文中能找到myid）中的值和 <code>ZXID</code>。使用<code>(myid, zxid)</code> 表示，此时第一个节点为 <code>(1, 0)</code>，第二个节点为 <code>(2, 0)</code>，然后将自己的值发给其他节点。</li><li>2、当其他服务收到投票后，先判断是否是本轮投票，投票的机器的状态是否为 <code>Looking</code>。</li><li>3、针对每次的投票，服务器都需要将自己的票数和其他服务器对比。先检查 <code>ZXID</code>，这个时候 <code>ZXID</code> 都为0，如果 <code>ZXID</code> 谁的大谁就是Leader，如果 <code>ZXID</code> 相同就对比 <code>myid</code>，第二个节点的 <code>myid</code> 为2，所以第二个节点就是Leader。</li><li>4、每次投票之后，服务器会统计是否有过半的机器接收到相同的投票信息，如果已经过半，就确认第二个节点为 Leader。</li><li>5、一旦确认了 Leader，每台服务器都会更新自己的状态。如果是 <code>Follower</code> 角色，就改变状态为<code> Following</code>，如果是 <code>Leader</code> 角色，就改变状态为 <code>Leading</code>。当 <code>第三个节点</code> 进来的发现已经有了 Leader, 状态直接变成 <code>Following</code>。</li></ul><p>4、运行状态下选举</p><p>以下当第二个节点故障，第一个节点和第三个节点是良好的节点。</p><ul><li>1、当 Leader 挂掉之后，集群会拒绝所有的服务，余下非 <code>Observer</code> 服务器都会将自己的服务器的状态变更为 <code>Looking</code>。然后开始选举。</li><li>2、每个节点会发出投票。运行期间，节点上的 <code>ZXID</code> 可能不同，假设：第一个节点的 <code>ZXID</code> 为100，第三个节点的 <code>ZXID</code> 为120，这个时候第一个节点和第三个节点都会投票自己，第一个节点为 <code>(1, 100)</code>，第三个节点为 <code>(3, 120)</code>，由于第三个节点的 <code>ZXID</code> 为120，直接选举为 Leader。</li><li>3、其他步骤和初始化启动的时候一样。</li></ul>',13))])}const y=a(u,[["render",g],["__file","custer.html.vue"]]),L=JSON.parse('{"path":"/distributed/zookeeper/custer.html","title":"【第七篇章】集群搭建","lang":"zh-CN","frontmatter":{"title":"【第七篇章】集群搭建","index":false,"isOriginal":true,"category":"分布式技术","tag":"zookeeper","date":"2024-07-31T00:00:00.000Z","description":"一、概述 1、集群中的角色 2、集群为什么要搭建奇数个节点 如果部署单个节点，当节点宕机时，集群就会失效，就会出现单点故障。 如果部署两个节点，2的半数为1，半数以上最少为2，不允许有一台机器故障，不然投票机制不成立。 如果部署三个节点，3的半数为1.5，半数以上最少为2，允许有一台机器故障，投票机制可以成立。 如果部署四个节点，4的半数为2，半数以上...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/backend-book/distributed/zookeeper/custer.html"}],["meta",{"property":"og:site_name","content":"极速蜗牛"}],["meta",{"property":"og:title","content":"【第七篇章】集群搭建"}],["meta",{"property":"og:description","content":"一、概述 1、集群中的角色 2、集群为什么要搭建奇数个节点 如果部署单个节点，当节点宕机时，集群就会失效，就会出现单点故障。 如果部署两个节点，2的半数为1，半数以上最少为2，不允许有一台机器故障，不然投票机制不成立。 如果部署三个节点，3的半数为1.5，半数以上最少为2，允许有一台机器故障，投票机制可以成立。 如果部署四个节点，4的半数为2，半数以上..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-29T07:14:29.000Z"}],["meta",{"property":"article:author","content":"青衣"}],["meta",{"property":"article:tag","content":"zookeeper"}],["meta",{"property":"article:published_time","content":"2024-07-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-29T07:14:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【第七篇章】集群搭建\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-29T07:14:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"青衣\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、概述","slug":"一、概述","link":"#一、概述","children":[]},{"level":2,"title":"二、集群选取机制","slug":"二、集群选取机制","link":"#二、集群选取机制","children":[]}],"git":{"createdTime":1722237269000,"updatedTime":1722237269000,"contributors":[{"name":"Tsing","email":"ld320321@163.com","commits":1}]},"readingTime":{"minutes":3.92,"words":1177},"filePathRelative":"distributed/zookeeper/custer.md","localizedDate":"2024年7月31日","excerpt":"<h2>一、概述</h2>\\n<p>1、集群中的角色</p>\\n\\n<p>2、集群为什么要搭建奇数个节点</p>\\n<ul>\\n<li>如果部署单个节点，当节点宕机时，集群就会失效，就会出现单点故障。</li>\\n<li>如果部署两个节点，2的半数为1，半数以上最少为2，不允许有一台机器故障，不然投票机制不成立。</li>\\n<li>如果部署三个节点，3的半数为1.5，半数以上最少为2，允许有一台机器故障，投票机制可以成立。</li>\\n<li>如果部署四个节点，4的半数为2，半数以上最少为3，允许有一台机器机器故障，投票机制可以成立。</li>\\n<li>如果部署五个节点，5的半数为2.5，半数以上最少为3，允许有两台机器故障，投票机制可以成立。</li>\\n<li>所以部署zookeeper集群的时候一般部署的节点数量为<code>2n+1</code>台节点。</li>\\n</ul>","autoDesc":true}');export{y as comp,L as data};
